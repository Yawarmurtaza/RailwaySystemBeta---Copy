//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClientCUI.PasagerServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PasagerServiceReference.IPasagerService")]
    public interface IPasagerService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPasagerService/MakeBooking", ReplyAction="http://tempuri.org/IPasagerService/MakeBookingResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServerWCF.Passenger))]
        string MakeBooking(ServerWCF.User u, ServerWCF.Track trk, string number);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPasagerService/MakeBooking", ReplyAction="http://tempuri.org/IPasagerService/MakeBookingResponse")]
        System.Threading.Tasks.Task<string> MakeBookingAsync(ServerWCF.User u, ServerWCF.Track trk, string number);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPasagerService/LoadHours", ReplyAction="http://tempuri.org/IPasagerService/LoadHoursResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServerWCF.User))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServerWCF.Track))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServerWCF.Booking[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServerWCF.Booking))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServerWCF.Passenger))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServerWCF.Station[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServerWCF.Station))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServerWCF.Track[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServerWCF.Train[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServerWCF.Train))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        object[] LoadHours(ServerWCF.Track track);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPasagerService/LoadHours", ReplyAction="http://tempuri.org/IPasagerService/LoadHoursResponse")]
        System.Threading.Tasks.Task<object[]> LoadHoursAsync(ServerWCF.Track track);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPasagerServiceChannel : ClientCUI.PasagerServiceReference.IPasagerService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PasagerServiceClient : System.ServiceModel.ClientBase<ClientCUI.PasagerServiceReference.IPasagerService>, ClientCUI.PasagerServiceReference.IPasagerService {
        
        public PasagerServiceClient() {
        }
        
        public PasagerServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PasagerServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PasagerServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PasagerServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string MakeBooking(ServerWCF.User u, ServerWCF.Track trk, string number) {
            return base.Channel.MakeBooking(u, trk, number);
        }
        
        public System.Threading.Tasks.Task<string> MakeBookingAsync(ServerWCF.User u, ServerWCF.Track trk, string number) {
            return base.Channel.MakeBookingAsync(u, trk, number);
        }
        
        public object[] LoadHours(ServerWCF.Track track) {
            return base.Channel.LoadHours(track);
        }
        
        public System.Threading.Tasks.Task<object[]> LoadHoursAsync(ServerWCF.Track track) {
            return base.Channel.LoadHoursAsync(track);
        }
    }
}
